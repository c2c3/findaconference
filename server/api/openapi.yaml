openapi: 3.0.0
info:
  contact:
    name: Coast to Coast Code Co
    url: http://github.com/c2c3
  description: API for Find a Conference's conference database.
  license:
    name: MIT
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Find a Conference
  version: 1.0.0
servers:
- url: https://petstore.swagger.io/v2
paths:
  /conferences:
    get:
      description: |
        Returns all conferences
      operationId: findConferences
      parameters:
      - description: tags to filter by
        explode: true
        in: query
        name: tags
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: maximum number of results to return
        explode: true
        in: query
        name: limit
        required: false
        schema:
          format: int32
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Conference'
                type: array
          description: conference response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
    post:
      description: Creates a new conference in the database
      operationId: addConference
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewConference'
        description: Conference to add to the database
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conference'
          description: conference response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - BearerAuth: []
  /conference/{id}:
    delete:
      description: deletes a single conference based on the ID supplied
      operationId: deleteConference
      parameters:
      - description: ID of conference to delete
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "204":
          description: conference deleted
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
      security:
      - BearerAuth: []
    get:
      description: Returns a specific conference based on a single ID
      operationId: find conference by ID
      parameters:
      - description: ID of conference to fetch
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: uuid
          type: string
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Conference'
          description: conference response
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
          description: unexpected error
components:
  schemas:
    Conference:
      allOf:
      - $ref: '#/components/schemas/NewConference'
      - $ref: '#/components/schemas/Conference_allOf'
    NewConference:
      example:
        endDate: 2000-01-23
        name: Really Cool Conf 2023
        description: 'The coolest software development conference at the North Pole! '
        theme: Software Development
        url: https://www.google.com
        startDate: 2000-01-23
      properties:
        name:
          example: Really Cool Conf 2023
          type: string
        theme:
          example: Software Development
          type: string
        description:
          example: 'The coolest software development conference at the North Pole! '
          type: string
        url:
          example: https://www.google.com
          format: url
          pattern: "^(https:\\/\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\\
            /)?[a-zA-Z]{2,}(\\.[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?\\/[a-zA-Z0-9]{2,}|((https:\\\
            /\\/www\\.|http:\\/\\/www\\.|https:\\/\\/|http:\\/\\/)?[a-zA-Z]{2,}(\\\
            .[a-zA-Z]{2,})(\\.[a-zA-Z]{2,})?)|(https:\\/\\/www\\.|http:\\/\\/www\\\
            .|https:\\/\\/|http:\\/\\/)?[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}\\.[a-zA-Z0-9]{2,}(\\\
            .[a-zA-Z0-9]{2,})?%"
          type: string
        startDate:
          format: date
          type: string
        endDate:
          format: date
          type: string
      required:
      - description
      - name
      - theme
      - url
      type: object
    Error:
      properties:
        code:
          example: 403
          format: int32
          type: integer
        message:
          type: string
      required:
      - code
      - message
      type: object
    Conference_allOf:
      properties:
        id:
          format: uuid
          type: string
      required:
      - id
      type: object
      example: null
  securitySchemes:
    BearerAuth:
      scheme: bearer
      type: http
