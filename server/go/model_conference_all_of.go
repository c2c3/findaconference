/*
 * Find a Conference
 *
 * API for Find a Conference's conference database.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

type ConferenceAllOf struct {

	Id string `json:"id"`
}

// AssertConferenceAllOfRequired checks if the required fields are not zero-ed
func AssertConferenceAllOfRequired(obj ConferenceAllOf) error {
	elements := map[string]interface{}{
		"id": obj.Id,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	return nil
}

// AssertRecurseConferenceAllOfRequired recursively checks if required fields are not zero-ed in a nested slice.
// Accepts only nested slice of ConferenceAllOf (e.g. [][]ConferenceAllOf), otherwise ErrTypeAssertionError is thrown.
func AssertRecurseConferenceAllOfRequired(objSlice interface{}) error {
	return AssertRecurseInterfaceRequired(objSlice, func(obj interface{}) error {
		aConferenceAllOf, ok := obj.(ConferenceAllOf)
		if !ok {
			return ErrTypeAssertionError
		}
		return AssertConferenceAllOfRequired(aConferenceAllOf)
	})
}
