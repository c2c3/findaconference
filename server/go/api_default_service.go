/*
 * Find a Conference
 *
 * API for Find a Conference's conference database.
 *
 * API version: 1.0.0
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package openapi

import (
	"context"
	"net/http"
	"errors"
)

// DefaultApiService is a service that implements the logic for the DefaultApiServicer
// This service should implement the business logic for every endpoint for the DefaultApi API.
// Include any external packages or services that will be required by this service.
type DefaultApiService struct {
}

// NewDefaultApiService creates a default api service
func NewDefaultApiService() DefaultApiServicer {
	return &DefaultApiService{}
}

// AddConference - 
func (s *DefaultApiService) AddConference(ctx context.Context, newConference NewConference) (ImplResponse, error) {
	// TODO - update AddConference with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Conference{}) or use other options such as http.Ok ...
	//return Response(200, Conference{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("AddConference method not implemented")
}

// DeleteConference - 
func (s *DefaultApiService) DeleteConference(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update DeleteConference with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(204, {}) or use other options such as http.Ok ...
	//return Response(204, nil),nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("DeleteConference method not implemented")
}

// FindConferenceByID - 
func (s *DefaultApiService) FindConferenceByID(ctx context.Context, id string) (ImplResponse, error) {
	// TODO - update FindConferenceByID with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, Conference{}) or use other options such as http.Ok ...
	//return Response(200, Conference{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FindConferenceByID method not implemented")
}

// FindConferences - 
func (s *DefaultApiService) FindConferences(ctx context.Context, tags []string, limit int32) (ImplResponse, error) {
	// TODO - update FindConferences with the required logic for this service method.
	// Add api_default_service.go to the .openapi-generator-ignore to avoid overwriting this service implementation when updating open api generation.

	//TODO: Uncomment the next line to return response Response(200, []Conference{}) or use other options such as http.Ok ...
	//return Response(200, []Conference{}), nil

	//TODO: Uncomment the next line to return response Response(0, Error{}) or use other options such as http.Ok ...
	//return Response(0, Error{}), nil

	return Response(http.StatusNotImplemented, nil), errors.New("FindConferences method not implemented")
}
